/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsJSONValue } from "../../validators";

import {
  IsOptional,
  IsEnum,
  IsNumber,
  Min,
  Max,
  IsString,
  MaxLength,
  ValidateNested,
} from "class-validator";

import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EnumOrderStatus } from "./EnumOrderStatus";
import { TableWhereUniqueInput } from "../../table/base/TableWhereUniqueInput";
import { Type } from "class-transformer";
import { BillingUpdateManyWithoutOrdersInput } from "./BillingUpdateManyWithoutOrdersInput";

@InputType()
class OrderUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  items?: InputJsonValue;

  @ApiProperty({
    required: false,
    enum: EnumOrderStatus,
  })
  @IsEnum(EnumOrderStatus)
  @IsOptional()
  @Field(() => EnumOrderStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalAmount?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  waiter?: string | null;

  @ApiProperty({
    required: false,
    type: () => TableWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TableWhereUniqueInput)
  @IsOptional()
  @Field(() => TableWhereUniqueInput, {
    nullable: true,
  })
  table?: TableWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => BillingUpdateManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => BillingUpdateManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => BillingUpdateManyWithoutOrdersInput, {
    nullable: true,
  })
  billings?: BillingUpdateManyWithoutOrdersInput;
}

export { OrderUpdateInput as OrderUpdateInput };
