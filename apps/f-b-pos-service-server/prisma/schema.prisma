datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Order {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  items       Json?
  status      EnumOrderStatus?
  totalAmount Float?
  waiter      String?
  table       Table?           @relation(fields: [tableId], references: [id])
  tableId     String?          @db.ObjectId
  billings    Billing[]
}

model Table {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  status      EnumTableStatus?
  numberField Int?
  assignedTo  String?
  orders      Order[]
}

model Billing {
  id            String                    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime                  @default(now())
  updatedAt     DateTime                  @updatedAt
  amount        Float?
  paymentMethod EnumBillingPaymentMethod?
  status        EnumBillingStatus?
  order         Order?                    @relation(fields: [orderId], references: [id])
  orderId       String?                   @db.ObjectId
}

model FoodMenu {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  itemName  String?
  price     Float?
  quantity  Int?
  category  String?
}

model Menu {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  qrCodeUrl String?
  items     Json?
}

model Inventory {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  itemName       String?
  category       String?
  alertThreshold Int?
  quantity       Int?
}

model Sales {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  date        DateTime?
  totalSales  Float?
  dailyReport Json?
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String?
  lastName  String?
  username  String   @unique
  email     String?  @unique
  password  String
  roles     Json
}

model Manager {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Owner {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cashier {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model KitchenStaff {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Waiter {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum EnumOrderStatus {
  Option1
}

enum EnumTableStatus {
  Option1
}

enum EnumBillingPaymentMethod {
  Option1
}

enum EnumBillingStatus {
  Option1
}
